[build-system]
build-backend = 'scikit_build_core.build'
requires = ['cmake', 'mpi4py>=3.1', 'pybind11>=2.6', 'scikit-build-core', 'wheel']

[project]
dependencies = ['mpi4py>=3.1', 'numpy>=1.21']
description = 'Generic Halo Exchanges: Python API'
name = 'ghex'
version = '0.3.0'  # needs to be adapted
# note(stubbiali): the following fields are temporarily commented out since both LICENSE and README
#  files live in a parent directory
# license = {file = '../../LICENSE'}
# readme = {file = '../../README.md', content-type = 'text/markdown'}

[project.urls]
repository = 'https://github.com/ghex-org/GHEX'

[project.optional-dependencies]
test = ['pytest', 'pytest-mpi']

[tool.scikit-build]
logging.level = 'INFO'
minimum-version = '0.5'
cmake.minimum-version = '3.20'
cmake.verbose = true
cmake.source-dir = "../.."
cmake.build-type = "Release"
cmake.args = [
    "-DGHEX_BUILD_PYTHON_BINDINGS=ON",
    "-DGHEX_USE_BUNDLED_LIBS=ON",
    "-DGHEX_USE_BUNDLED_GRIDTOOLS=ON",
    "-DGHEX_USE_BUNDLED_OOMPH=ON",
    "-DHAVE_MPI4PY=True",
]
wheel.expand-macos-universal-tags = true
wheel.install-dir = "ghex"
wheel.packages = []
wheel.license-files = []

[tool.black]
exclude = '''
/(
    \.eggs
  | \.git
  | \.gt_cache
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist

  # The following are specific to Black, you probably don't want those.
  | blib2to3
  | tests/data
  | profiling
)/
'''
include = '\.pyi?$'
line-length = 100

# Pip installation:
###################

# for cuda aware build:
# pip install bindings/python \
#     --config-settings=cmake.define.GHEX_USE_GPU="ON" \
#     --config-settings=cmake.define.GHEX_GPU_TYPE="NVIDIA"

# for hip aware build:
# pip install bindings/python \
#     --config-settings=cmake.define.GHEX_USE_GPU="ON" \
#     --config-settings=cmake.define.GHEX_GPU_TYPE="AMD" \
#     --config-settings=cmake.define.AMDGPU_TARGETS="gfx900"

# from github:
#pip install 'git+https://github.com/ghex-org/GHEX.git#subdirectory=bindings/python'
